username: admin
password: NokiaSrl1!
port: 57400
timeout: 10s
skip-verify: true
encoding: json_ietf

# The following is a list of the network devices to connect to.
targets:
  spine1:
  spine2:
  leaf1:
  leaf2:
  leaf3:

# Subscriptions defines what data to subscribe to from the targets.
#   - Name of the subscription.
#   - The gNMI paths to subscribe to.
#   - stream mode indicates continuous updates.
#   - sample stream mode indicates periodic sampling of data.
subscriptions:
  srl_if_oper_state:
    paths:
      - /interface[name=ethernet-1/*]/oper-state
    mode: stream
    stream-mode: sample
    sample-interval: 5s

# Outputs defines where to send the subscribed data.

# prom: is the name given to this output configuration.
# type: prometheus: Specifies that this output is of the Prometheus type, meaning that the data will be formatted in a way that Prometheus can scrape and ingest it.
# listen: :9273: Specifies the address and port on which this service will listen for Prometheus to scrape the metrics. The :9273 means it will listen on port 9273 on all network interfaces.
# path: /metrics: The URL path where the Prometheus server will scrape the metrics from. Prometheus will look for metrics at http://<host>:9273/metrics.
# metric-prefix: gnmic: A prefix added to all metrics names. This helps in distinguishing the metrics from gnmic in Prometheus.
# append-subscription-name: true: If true, the subscription name (e.g., srl_if_oper_state) will be appended to the metric names. This helps in identifying the source subscription of the metrics.
# export-timestamps: true: If true, the timestamps of the telemetry data will be exported along with the metrics. This is useful for time-series analysis in Prometheus.
# debug: false: If set to true, enables debug mode for this output, providing more verbose logging for troubleshooting.
# event-processors: A list of processors that will be applied to the events before they are exported to Prometheus.
# trim-prefixes: This processor removes specified prefixes from the metric names or paths.
# up-down-map: This processor replaces string values (like "up" and "down") with integers (e.g., "up" to "1" and "down" to "0").

# stdout: Sends the output to the standard output (console).
# type: Specifies the output type (file, but in this case it is the console).
# file-type: Specifies the file type (stdout).
# event-processors: Lists processors to apply to the events before output.
# proc-convert-strings-to-int: Processor to convert string values to integers.
# trim-prefixes: Processor to trim path prefixes from the data

outputs:
  # prom:
  #   type: prometheus
  #   listen: :9273
  #   path: /metrics
  #   metric-prefix: gnmic
  #   append-subscription-name: true
  #   export-timestamps: true
  #   debug: false
  #   event-processors:
  #     - trim-prefixes
  #     - up-down-map
  # stdout:
  #   type: file
  #   file-type: stdout
  #   event-processors:
  #     - proc-convert-strings-to-int
  #     - trim-prefixes

  # file_output:
  #   type: file
  #   file-type: text
  #   file: outputfile.txt
  #   event-processors:
  #     - proc-convert-strings-to-int
  #     - trim-prefixes

# Processors defines how to process the data.
processors:
  trim-prefixes:
    event-strings:
      value-names:
        - ".*"
      transforms:
        - path-base:
            apply-on: "name"
  up-down-map:
    event-strings:
      value-names:
        - oper-state
      transforms:
        - replace:
            apply-on: "value"
            old: "up"
            new: "1"
        - replace:
            apply-on: "value"
            old: "down"
            new: "0"
